(namespace dev)
(include "./header"
         "./compile")

(import-namespace kit)
(import-namespace interface)
(import-namespace async)
(import-namespace markup)


(const sibilant-src (.load File-system "./src/sibilant"))
(const js-target (.load File-system "./src/js"))

(define Constructor Interface
  (def define (name body)
       (const interface (.define Interface ))

       (def constructor ((dots args))
            ((create interface) (dots args)))))

(define Node-process Interface

  (process null)

  (init (path ))

  (def start () (unless this.process (assign this.process (.spawn child_process "node" [this.path]))))

  (def-async stop ()
    (await (when this.process
             (var signal (when-emits this.process "exit"))
             (.kill this.process)
             (assign this.process null)
             signal)))

  (def-async restart ()
    (await (.stop this))
    (.start this)))

(const main-process ((create Node-process) "./src/js/main.js"))


(watch sibilant-src "." "change" (compile-module file js-target))
(watch js-target "." "change" (.restart main-process))
