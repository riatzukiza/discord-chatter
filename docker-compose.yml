services:
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
  indexer:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
      # - .env
    volumes:
      - ./services/discord-indexer:/app
      - ./shared:/app/shared
    build: ./services/discord-indexer
  message-dispatcher:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
    volumes:
      - ./services/discord-message-dispatcher:/app
      - ./shared:/app/shared
    build: ./services/discord-message-dispatcher
  gpt-generator:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
    volumes:
      - ./services/gpt-generator:/app
      - ./shared:/app/shared
      - ./models:/app/models
    build: ./services/gpt-generator
    deploy:
      resources:
        reservations:
           devices:
            - driver: nvidia
              device_ids: [ "0" ]
              capabilities: [gpu]
  gpt-trainer:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
    volumes:
      - ./services/gpt-trainer:/app
      - ./shared:/app/shared
      - ./models:/app/models
    build: ./services/gpt-trainer
    deploy:
      resources:
        reservations:
           devices:
            - driver: nvidia
              device_ids: [ "2" ]
              capabilities: [gpu]
  mongo:
    restart: always
    image: mongo
    # environment:
      # - MONGO_INITDB_ROOT_USERNAME=root
      # - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - mongo
    expose:
      - 27017

  chroma:
    restart: always
    image: chroma
    volumes:
      - ./data/chroma:/chroma/chroma
    networks:
      - chroma
    expose:
      - 8000
  message-vector-embedder:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
    volumes:
      - ./services/message-vector-embedder:/app
      - ./shared:/app/shared
      - ./chroma:/app/chroma
    build: ./services/gpt-trainer
volumes:
  cache:
    driver: local
networks:
  mongo:
  chroma:
