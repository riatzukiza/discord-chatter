
# Base Docker compose for all environments
version: "3.4"

services:
  # twitter-bot:
  #   restart: always
  #   build:
  #     context: ./services/discord-twitter-bot/
  #   env_file:
  #     - ./services/discord-twitter-bot/.env
  #   volumes:
  #     - ./services/discord-twitter-bot:/app


  # jim:
  #   restart: always
  #   env_file:
  #     - .env.jim
  #   volumes:
  #     - .:/app
  #   image: discord-rnn-bot
  #   build: .
  duck-indexer:
    restart: always
    env_file:
      - .env.duck
      - .env
    volumes:
      - ./services/discord-indexer:/app
      - ./shared:/app/shared
    build: ./services/discord-indexer

  duck-message-generator_0: &message-generator
    restart: always
    env_file:
      - .env.duck
      - .env
    volumes:
      - ./services/discord-message-generator:/app
      - ./shared:/app/shared
      - ./models:/app/models
    build: ./services/discord-message-generator

  duck-message-generator_1: 
    <<: *message-generator

  duck-message-generator_2: 
    <<: *message-generator

  duck-message-generator_3: 
    <<: *message-generator

  duck-message-dispatcher:
    restart: always
    env_file:
      - .env.duck
      - .env
    volumes:
      - ./services/discord-message-dispatcher:/app
      - ./shared:/app/shared
    build: ./services/discord-message-dispatcher

  duck-model-trainer:
    restart: always
    env_file:
      - .env.duck
      - .env
    volumes:
      - ./services/model-trainer:/app
      - ./shared:/app/shared
      - ./models:/app/models
    build: ./services/model-trainer
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ "0" ]
              capabilities: [gpu]
