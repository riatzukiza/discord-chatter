version: "3.4"

services:
  indexer:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
      # - .env
    volumes:
      - ./services/discord-indexer:/app
      - ./shared:/app/shared
    build: ./services/discord-indexer
  message-generator_0: &message-generator
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
      # - .env
    volumes:
      - ./services/discord-message-generator:/app
      - ./shared:/app/shared
      - ./models:/app/models
    build: ./services/discord-message-generator
    deploy:
      resources:
        limits:
          memory: 8G

  message-dispatcher:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
    volumes:
      - ./services/discord-message-dispatcher:/app
      - ./shared:/app/shared
    build: ./services/discord-message-dispatcher

  model-trainer:
    restart: always
    depends_on:
      - mongo
    networks:
      - mongo
    env_file:
      - .env.duck
      # - .env
    volumes:
      - ./services/model-trainer:/app
      - ./shared:/app/shared
      - ./models:/app/models
    build: ./services/model-trainer
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
           devices:
            - driver: nvidia
              device_ids: [ "0" ]
              capabilities: [gpu]

  # transformer-model-trainer:
  #   restart: always
  #   depends_on:
  #     - mongo
  #   networks:
  #     - mongo
  #   env_file:
  #     - .env.duck
  #     # - .env
  #   volumes:
  #     - ./services/model-trainer:/app
  #     - ./shared:/app/shared
  #     - ./models:/app/models
  #   build: ./services/model-trainer
  #   deploy:
  #     resources:
  #       reservations:
  #          devices:
  #           - driver: nvidia
  #             device_ids: [ "0" ]
  #             capabilities: [gpu]
   # frontend:
   #  build:
   #    context: frontend
   #    target: development
   #  ports:
   #    - 3000:3000
   #  stdin_open: true
   #  volumes:
   #    - ./frontend:/usr/src/app
   #    - /usr/src/app/node_modules
   #  restart: always
   #  networks:
   #    - react-express
   #  depends_on:
   #    - backend

  # backend:
  #   restart: always
  #   build:
  #     context: backend
  #     target: development
  #   volumes:
  #     - ./backend:/usr/src/app
  #     - /usr/src/app/node_modules
  #   depends_on:
  #     - mongo
  #   networks:
  #     - express-mongo
  #     - react-express
  #   expose:
  #     - 3000
  mongo:
    restart: always
    image: mongo
    # environment:
      # - MONGO_INITDB_ROOT_USERNAME=root
      # - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - ./data:/data/db
    networks:
      - mongo
    expose:
      - 27017
networks:
  react-express:
  mongo:
